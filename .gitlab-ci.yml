stages:
  - test
  - publish

publish:
  stage: publish
  only: ['main']
  image: node:17
  script:
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" > .npmrc
    - echo "@${CI_PROJECT_NAMESPACE}:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" >> .npmrc
    - npm config set cache /var/cache/ci/npm --global
    - npm install
    - npm publish
  when: manual

jest:
  stage: test
  image: node:17
  only:
    - merge_requests
    - development
    - main
  artifacts:
    paths:
      - test-report.xml
  script:
    - npm config set cache /var/cache/ci/npm --global
    - npm install
    - npm run coverage

.sonarqube:
  stage: test
  needs:
    - jest
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache


sonarqube-mr:
  extends: .sonarqube
  script: 
    - |
      sonar-scanner \
          -Dsonar.pullrequest.key=${CI_MERGE_REQUEST_IID} \
          -Dsonar.pullrequest.branch=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} \
          -Dsonar.pullrequest.base=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} \
          || true
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^feature\//'
    - if: '$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^dependabot\//'
      when: never

sonarqube-branch:
  extends: .sonarqube
  script: 
    - sonar-scanner || true
  allow_failure: true
  only:
    - main 
    - development
